"use strict";(()=>{var e={};e.id=5463,e.ids=[5463],e.modules={1081:e=>{e.exports=require("dotenv/config")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7612:e=>{e.exports=import("drizzle-orm")},1749:e=>{e.exports=import("drizzle-orm/node-postgres")},8358:e=>{e.exports=import("drizzle-orm/pg-core")},8678:e=>{e.exports=import("pg")},6113:e=>{e.exports=require("crypto")},144:(e,t,a)=>{a.a(e,async(e,n)=>{try{a.r(t),a.d(t,{config:()=>i,default:()=>s,routeModule:()=>d});var o=a(1802),c=a(7153),r=a(6249),l=a(1670),u=e([l]);l=(u.then?(await u)():u)[0];let s=(0,r.l)(l,"default"),i=(0,r.l)(l,"config"),d=new o.PagesAPIRouteModule({definition:{kind:c.x.PAGES_API,page:"/api/accounts",pathname:"/api/accounts",bundlePath:"",filename:""},userland:l});n()}catch(e){n(e)}})},1670:(e,t,a)=>{a.a(e,async(e,n)=>{try{a.r(t),a.d(t,{default:()=>handler});var o=a(7612),c=a(6113),r=a(4379),l=a(3685),u=e([o,r,l]);[o,r,l]=u.then?(await u)():u;let s=[{accountId:"mock-acc-1",accountName:"Vietcombank Savings",accountType:"bank",ownerId:"mock-person-1",ownerName:"John Doe",openingBalance:1e7,currentBalance:125e5,totalIn:5e6,totalOut:25e5,status:"active",notes:"Main savings account",parentAccountId:null,imgUrl:null},{accountId:"mock-acc-2",accountName:"Cash Wallet",accountType:"cash",ownerId:"mock-person-1",ownerName:"John Doe",openingBalance:5e5,currentBalance:75e4,totalIn:3e5,totalOut:5e4,status:"active",notes:"Daily spending cash",parentAccountId:null,imgUrl:null},{accountId:"mock-acc-3",accountName:"Credit Card",accountType:"credit",ownerId:"mock-person-1",ownerName:"John Doe",openingBalance:0,currentBalance:-2e6,totalIn:0,totalOut:2e6,status:"active",notes:"Visa credit card",parentAccountId:null,imgUrl:null},{accountId:"mock-acc-4",accountName:"MoMo E-Wallet",accountType:"e-wallet",ownerId:"mock-person-1",ownerName:"John Doe",openingBalance:1e5,currentBalance:35e4,totalIn:5e5,totalOut:25e4,status:"active",notes:"MoMo digital wallet",parentAccountId:null,imgUrl:null}];async function handler(e,t){let a=r.db;if(!a){if(console.warn("Database connection is not configured - using mock data"),"GET"===e.method){t.status(200).json(s);return}if("POST"===e.method){let a=e.body||{},n={accountId:`mock-acc-${Date.now()}`,accountName:a.accountName||"New Account",accountType:a.accountType||"other",ownerId:a.ownerId||"mock-person-1",ownerName:"John Doe",openingBalance:Number(a.openingBalance??0),currentBalance:Number(a.currentBalance??0),totalIn:0,totalOut:0,status:a.status||"active",notes:a.notes||null,parentAccountId:a.parentAccountId||null,imgUrl:a.imgUrl||null};s.push(n),t.status(201).json(n);return}t.status(405).json({error:"Method not allowed"});return}if("GET"===e.method){try{let e=await a.select({accountId:l.MI.accountId,accountName:l.MI.accountName,accountType:l.MI.accountType,openingBalance:l.MI.openingBalance,currentBalance:l.MI.currentBalance,totalIn:l.MI.totalIn,totalOut:l.MI.totalOut,status:l.MI.status,notes:l.MI.notes,parentAccountId:l.MI.parentAccountId,imgUrl:l.MI.imgUrl}).from(l.MI).orderBy((0,o.asc)(l.MI.accountName)),n=e.map(e=>({...e,openingBalance:Number(e.openingBalance??0),currentBalance:Number(e.currentBalance??0),totalIn:Number(e.totalIn??0),totalOut:Number(e.totalOut??0)}));t.status(200).json(n)}catch(a){console.error("Failed to fetch accounts",a);let e=a instanceof Error?a.message:"Unknown error";t.status(500).json({error:e})}return}if("POST"===e.method){try{let n=e.body||{},o=["accountName","accountType","openingBalance","currentBalance","status"].filter(e=>void 0===n[e]||null===n[e]);if(o.length>0){t.status(400).json({error:"Validation failed",details:`Missing required fields: ${o.join(", ")}`});return}let r=l.bz.enumValues;if(!r.includes(n.accountType)){t.status(400).json({error:"Validation failed",details:`accountType must be one of: ${r.join(", ")}`});return}let u=l.h9.enumValues;if(!u.includes(n.status)){t.status(400).json({error:"Validation failed",details:`status must be one of: ${u.join(", ")}`});return}let s=parseFloat(n.openingBalance),i=parseFloat(n.currentBalance);if(isNaN(s)||isNaN(i)){t.status(400).json({error:"Validation failed",details:"openingBalance and currentBalance must be valid numbers"});return}let d={accountId:(0,c.randomUUID)(),accountName:n.accountName,imgUrl:n.imgUrl||null,accountType:n.accountType,parentAccountId:n.parentAccountId||null,assetRef:n.assetRef||null,openingBalance:s.toFixed(2),currentBalance:i.toFixed(2),status:n.status,totalIn:n.totalIn?parseFloat(n.totalIn).toFixed(2):"0.00",totalOut:n.totalOut?parseFloat(n.totalOut).toFixed(2):"0.00",notes:n.notes||null},p=await a.insert(l.MI).values(d).returning();t.status(201).json(p[0])}catch(a){console.error("Failed to create account",a);let e=a instanceof Error?a.message:"Unknown error";t.status(500).json({error:e})}return}t.setHeader("Allow",["GET","POST"]),t.status(405).json({error:"Method not allowed"})}n()}catch(e){n(e)}})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[4222,4379,6340,3902],()=>__webpack_exec__(144));module.exports=a})();