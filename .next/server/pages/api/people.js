"use strict";(()=>{var e={};e.id=4775,e.ids=[4775],e.modules={1081:e=>{e.exports=require("dotenv/config")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7612:e=>{e.exports=import("drizzle-orm")},1749:e=>{e.exports=import("drizzle-orm/node-postgres")},8358:e=>{e.exports=import("drizzle-orm/pg-core")},8678:e=>{e.exports=import("pg")},6113:e=>{e.exports=require("crypto")},76:(e,t,r)=>{r.a(e,async(e,o)=>{try{r.r(t),r.d(t,{config:()=>d,default:()=>i,routeModule:()=>c});var a=r(1802),n=r(7153),s=r(6249),l=r(1429),u=e([l]);l=(u.then?(await u)():u)[0];let i=(0,s.l)(l,"default"),d=(0,s.l)(l,"config"),c=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/people",pathname:"/api/people",bundlePath:"",filename:""},userland:l});o()}catch(e){o(e)}})},1429:(e,t,r)=>{r.a(e,async(e,o)=>{try{r.r(t),r.d(t,{default:()=>handler});var a=r(7612),n=r(6113),s=r(4379),l=r(6340),u=e([a,s,l]);[a,s,l]=u.then?(await u)():u;let i=[{personId:"mock-person-1",fullName:"John Doe",contactInfo:"john@example.com",status:"active",groupId:null,imgUrl:null,note:"Primary user",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},{personId:"mock-person-2",fullName:"Jane Smith",contactInfo:"jane@example.com",status:"active",groupId:null,imgUrl:null,note:"Secondary user",createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()}];async function handler(e,t){let r=s.db;if(!r){if(console.warn("Database connection is not configured - using mock data"),"GET"===e.method){t.status(200).json(i);return}if("POST"===e.method){let r=e.body||{};if(!r.fullName||!r.status){t.status(400).json({error:"Validation failed",details:"fullName and status are required"});return}let o={personId:`mock-person-${Date.now()}`,fullName:r.fullName,contactInfo:r.contactInfo||null,status:r.status,groupId:r.groupId||null,imgUrl:r.imgUrl||null,note:r.note||null,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};i.push(o),t.status(201).json(o);return}t.status(405).json({error:"Method not allowed"});return}if("GET"===e.method){try{let e=await r.select().from(l.M).orderBy((0,a.asc)(l.M.fullName));t.status(200).json(e)}catch(r){console.error("Failed to fetch people",r);let e=r instanceof Error?r.message:"Unknown error";t.status(500).json({error:e})}return}if("POST"===e.method){try{let o=e.body||{};if(!o.fullName||!o.status){t.status(400).json({error:"Validation failed",details:"fullName and status are required"});return}let a={personId:(0,n.randomUUID)(),fullName:o.fullName,status:o.status,contactInfo:o.contactInfo||null,groupId:o.groupId||null,imgUrl:o.imgUrl||null,note:o.note||null},s=await r.insert(l.M).values(a).returning();t.status(201).json(s[0])}catch(r){console.error("Failed to create person",r);let e=r instanceof Error?r.message:"Unknown error";t.status(500).json({error:e})}return}t.setHeader("Allow",["GET","POST"]),t.status(405).json({error:"Method not allowed"})}o()}catch(e){o(e)}})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[4222,4379,6340],()=>__webpack_exec__(76));module.exports=r})();