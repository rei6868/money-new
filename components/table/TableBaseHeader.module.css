/* Header-specific styles */
.tableHeader {
  position: relative;
  --table-header-main-height: 0px;
}

.headerCell {
  position: sticky;
  top: 0;
  background: var(--mf-sidebar-bg);
  z-index: 60;
  text-align: left;
  font-size: calc(var(--transactions-font-scale, 1) * 0.95rem);
  letter-spacing: 0.05em;
  text-transform: uppercase;
  color: var(--mf-accent-strong);
  font-weight: 700;
  padding: 1rem 1rem 0.9rem;
  border-bottom: 1px solid rgba(148, 163, 184, 0.18);
  --header-layout-direction: row;
  --header-justify: space-between;
  --header-text-align: flex-start;
  white-space: normal;
  overflow: visible;
}

.headerCell::after {
  content: '';
  position: absolute;
  inset: 0;
  background: linear-gradient(180deg, rgba(15, 23, 42, 0.04), transparent 60%);
  pointer-events: none;
  z-index: -1;
}

.headerCell.stickyLeft {
  position: sticky;
  left: 0;
  z-index: 180;
  background: var(--mf-sidebar-bg);
  padding-left: 0;
  margin-left: 0;
}

.headerCell.stickyLeft,
.headerCell.stickyRight {
  z-index: 170;
}

.headerShell {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.45rem;
  flex-wrap: nowrap;
  width: 100%;
  min-height: 40px;
}

.headerContent {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: 0.35rem;
  flex: 1 1 auto;
  min-width: 0;
}

.headerStaticLabel {
  display: inline-flex;
  align-items: center;
  gap: 0.45rem;
  min-width: 0;
  overflow: hidden;
  white-space: nowrap;
}

.headerLabelText {
  font-size: calc(var(--transactions-font-scale, 1) * 0.78rem);
  font-weight: 700;
  letter-spacing: 0.08em;
  text-transform: uppercase;
  color: currentColor;
  display: block;
  line-height: 1.25;
  min-width: 0;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.headerAlignRight {
  text-align: right;
}

.headerAlignRight .headerShell {
  justify-content: flex-end;
}

.headerAlignRight .headerContent {
  align-items: flex-end;
}

.headerAlignRight .headerStaticLabel {
  justify-content: flex-end;
  text-align: right;
}

.headerAlignCenter {
  text-align: center;
}

.headerAlignCenter .headerShell {
  justify-content: center;
}

.headerAlignCenter .headerContent {
  align-items: center;
}

.headerReorderActive {
  cursor: grab;
}

.headerReorderActive:active {
  cursor: grabbing;
}

.headerReorderTarget {
  outline: 2px dashed rgba(99, 102, 241, 0.35);
  outline-offset: -4px;
  background: rgba(99, 102, 241, 0.08);
}

.headerCellHidden {
  opacity: 0.45;
}

/* Sort functionality */
.headerSortButton {
  border: none;
  background: transparent;
  padding: 0.2rem 0.4rem;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.25rem;
  cursor: pointer;
  color: inherit;
  flex-shrink: 0;
  border-radius: 999px;
  transition: background 0.2s ease, color 0.2s ease;
}

.headerSortButton:hover,
.headerSortButton:focus-visible {
  color: var(--mf-accent-strong);
  background: rgba(99, 102, 241, 0.12);
  outline: none;
}

.headerSortActive {
  color: var(--mf-accent-strong);
  background: rgba(99, 102, 241, 0.18);
}

.headerSortButton:disabled {
  opacity: 0.4;
  cursor: not-allowed;
  background: transparent;
}

.sortIcon {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: currentColor;
  opacity: 0.65;
  transition: opacity 0.18s ease;
  font-size: 1.2em;
  width: 1em;
  height: 1em;
}

.sortIconActive {
  opacity: 1;
}

/* Actions header */
.actionsHeader {
  padding: 1rem 1rem 0.9rem;
  border-left: 1px solid rgba(148, 163, 184, 0.18);
  border-bottom: 1px solid rgba(148, 163, 184, 0.18);
  text-align: center;
}



/* Header checkbox */
.headerCheckboxInner {
  display: flex;
  flex-direction: column;
  gap: 0.35rem;
  align-items: center;
  justify-content: center;
  padding-left: 0 !important;
  margin-left: 0 !important;
  width: 100%;
  height: 100%;
}

.headerCheckboxInner input {
  width: 16px;
  height: 16px;
  margin: 0 !important;
  padding: 0 !important;
}

/* Column customization styles - now integrated in main header */

.columnToggleSwitch {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: flex-start;
  width: 46px;
  height: 26px;
  cursor: pointer;
  flex-shrink: 0;
}

.columnToggleSwitch input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
}

.columnToggleTrack {
  position: relative;
  display: inline-flex;
  align-items: center;
  width: 46px;
  height: 26px;
  border-radius: 999px;
  background: rgba(148, 163, 184, 0.45);
  transition: background 0.2s ease, box-shadow 0.2s ease;
  padding: 0 4px;
  box-sizing: border-box;
}

.columnToggleThumb {
  width: 18px;
  height: 18px;
  border-radius: 999px;
  background: #ffffff;
  box-shadow: 0 2px 6px rgba(15, 23, 42, 0.28);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
  transform: translateX(0);
}

.columnToggleSwitch input:checked + .columnToggleTrack {
  background: linear-gradient(135deg, #6366f1 0%, #4338ca 100%);
  box-shadow: 0 8px 18px rgba(79, 70, 229, 0.32);
}

.columnToggleSwitch input:checked + .columnToggleTrack .columnToggleThumb {
  transform: translateX(18px);
}

.columnToggleSwitch input:focus-visible + .columnToggleTrack {
  outline: 3px solid rgba(99, 102, 241, 0.28);
  outline-offset: 2px;
}

.columnToggleSwitch input:disabled + .columnToggleTrack,
.columnToggleSwitch[data-disabled='true'] .columnToggleTrack {
  background: rgba(148, 163, 184, 0.2);
  box-shadow: none;
  cursor: not-allowed;
}

.columnToggleSwitch input:disabled + .columnToggleTrack .columnToggleThumb,
.columnToggleSwitch[data-disabled='true'] .columnToggleThumb {
  box-shadow: none;
  opacity: 0.7;
}

.columnToggleSwitch[data-disabled='true'] {
  cursor: not-allowed;
}

.columnToggleHidden {
  opacity: 0.55;
}

.columnToggleVisible {
  opacity: 1;
}