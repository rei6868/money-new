.overlay {
  position: fixed;
  inset: 0;
  background: rgba(15, 23, 42, 0.48);
  backdrop-filter: blur(4px);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2rem 1.5rem;
  z-index: 1300;
}

.modal {
  width: min(720px, 96vw);
  max-height: 90vh;
  background: var(--mf-surface, #ffffff);
  border-radius: 26px;
  box-shadow: 0 28px 52px rgba(15, 23, 42, 0.24);
  overflow: hidden;
  display: flex;
  flex-direction: column;
  position: relative;
  z-index: 1310;
}

.modalBody {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
  overflow-y: auto;
  padding: 1.4rem 2rem 1.6rem;
  max-height: calc(80vh - 150px);
}

.header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
  gap: 1rem;
  padding: 1.6rem 2rem 1.2rem;
  border-bottom: 1px solid rgba(148, 163, 184, 0.18);
}

.title {
  margin: 0;
  font-size: 1.35rem;
  font-weight: 700;
  color: var(--mf-text-strong);
}

.subtitle {
  margin: 0.35rem 0 0;
  font-size: 0.95rem;
  color: var(--mf-text-secondary);
  max-width: 32rem;
}

.closeButton {
  border: none;
  background: rgba(148, 163, 184, 0.18);
  color: var(--mf-text-secondary);
  width: 36px;
  height: 36px;
  border-radius: 50%;
  display: grid;
  place-items: center;
  cursor: pointer;
  transition: background 0.2s ease, color 0.2s ease;
}

.closeButton:hover,
.closeButton:focus-visible {
  background: rgba(99, 102, 241, 0.18);
  color: var(--mf-text-primary);
  outline: none;
}

.tabList {
  margin: 0;
  padding: 0;
  list-style: none;
  display: flex;
  gap: 0.75rem;
  flex-wrap: wrap;
  border-bottom: 1px solid rgba(148, 163, 184, 0.18);
}

.tabButton {
  border: none;
  background: rgba(148, 163, 184, 0.16);
  color: var(--mf-text-secondary);
  padding: 0.55rem 1rem;
  border-radius: 999px;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s ease, color 0.2s ease, transform 0.2s ease, box-shadow 0.2s ease;
  touch-action: manipulation;
}

@media (hover: hover) {
  .tabButton:not(.tabButtonActive):hover,
  .tabButton:not(.tabButtonActive):focus-visible {
    background: rgba(99, 102, 241, 0.18);
    color: var(--mf-text-primary);
    outline: none;
  }
}

.tabButton:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
}

.tabButtonActive,
.tabButtonActive:hover,
.tabButtonActive:focus-visible {
  color: #ffffff;
  box-shadow: 0 12px 26px rgba(15, 23, 42, 0.18);
}

.tabButtonActive:focus-visible {
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.28), 0 12px 26px rgba(15, 23, 42, 0.18);
}

.tabButtonActiveNegative {
  background: linear-gradient(135deg, #f97316 0%, #ef4444 100%);
}

.tabButtonActivePositive {
  background: linear-gradient(135deg, #34d399 0%, #10b981 100%);
}

.tabButtonActiveNeutral {
  background: linear-gradient(135deg, #6366f1 0%, #4338ca 100%);
}

.tabButtonActiveNegative:hover,
.tabButtonActiveNegative:focus-visible,
.tabButtonActivePositive:hover,
.tabButtonActivePositive:focus-visible,
.tabButtonActiveNeutral:hover,
.tabButtonActiveNeutral:focus-visible {
  background: inherit;
}

.tabPanel {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
  padding-top: 1.2rem;
}

.field {
  display: flex;
  flex-direction: column;
  gap: 0.45rem;
}

.fieldLabelRow {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.6rem;
}

.fieldLabel {
  font-size: 0.85rem;
  font-weight: 600;
  color: var(--mf-text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.dateDisplay {
  font-size: 0.78rem;
  font-weight: 600;
  color: var(--mf-text-muted);
  letter-spacing: 0.08em;
  text-transform: uppercase;
}

.input {
  border: 1px solid var(--mf-border-subtle);
  border-radius: 14px;
  padding: 0.6rem 0.85rem;
  font-size: 0.95rem;
  background: rgba(148, 163, 184, 0.12);
  color: var(--mf-text-primary);
  transition: border 0.2s ease, box-shadow 0.2s ease, background 0.2s ease;
}

.input:focus-visible {
  outline: none;
  border-color: rgba(99, 102, 241, 0.6);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.18);
  background: rgba(99, 102, 241, 0.08);
}

.dropdownField {
  width: 100%;
}

.formGrid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.2rem;
  align-items: flex-start;
}

.debtSection {
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
}

.debtTopRow {
  display: grid;
  grid-template-columns: minmax(0, 1fr) minmax(240px, 1fr);
  gap: 1.2rem;
  align-items: center;
}

.debtTypeGroup {
  display: grid;
  grid-template-columns: auto 1fr;
  align-items: center;
  gap: 0.75rem;
  width: 100%;
}

.debtTypeToggle {
  position: relative;
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  align-items: center;
  min-height: 44px;
  width: 100%;
  padding: 0.2rem 0.25rem;
  border-radius: 999px;
  border: 1px solid rgba(248, 113, 113, 0.45);
  background: linear-gradient(135deg, rgba(248, 113, 113, 0.12) 0%, rgba(239, 68, 68, 0.18) 100%);
  cursor: pointer;
  box-shadow: 0 10px 20px rgba(239, 68, 68, 0.14);
  transition: background 0.2s ease, border 0.2s ease, box-shadow 0.2s ease;
}

.debtTypeToggleDebt {
  border-color: rgba(248, 113, 113, 0.5);
}

.debtTypeToggle:focus-visible {
  outline: none;
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.22), 0 10px 20px rgba(239, 68, 68, 0.16);
}

.debtTypeToggleRepay {
  border-color: rgba(16, 185, 129, 0.5);
  background: linear-gradient(135deg, rgba(16, 185, 129, 0.16) 0%, rgba(5, 150, 105, 0.24) 100%);
  box-shadow: 0 10px 20px rgba(16, 185, 129, 0.18);
}

.debtTypeToggleRepay:focus-visible {
  box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.26), 0 10px 20px rgba(16, 185, 129, 0.2);
}

.debtTypeOption {
  position: relative;
  z-index: 1;
  text-align: center;
  font-weight: 600;
  font-size: 0.9rem;
  color: var(--mf-text-secondary);
  transition: color 0.2s ease;
  padding: 0.25rem 0.4rem;
}

.debtTypeOption[data-active='true'][data-variant='debt'] {
  color: var(--mf-negative-strong, #dc2626);
}

.debtTypeOption[data-active='true'][data-variant='repay'] {
  color: var(--mf-positive-strong, #047857);
}

.debtTypeThumb {
  position: absolute;
  top: 3px;
  left: 3px;
  width: calc(50% - 6px);
  height: calc(100% - 6px);
  border-radius: 999px;
  background: #ffffff;
  box-shadow: 0 12px 24px rgba(15, 23, 42, 0.16);
  transition: transform 0.2s ease;
}

.debtTypeToggleRepay .debtTypeThumb {
  transform: translateX(calc(100% + 6px));
}

.debtMetaRow {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(260px, 1fr));
  gap: 1.2rem;
  align-items: stretch;
}

.dateField {
  min-width: 0;
}

.debtTagColumn {
  display: grid;
  grid-template-rows: auto 1fr;
  align-content: start;
  gap: 0.6rem;
}

.debtTagHeader {
  gap: 0.75rem;
}

.lastMonthGroup {
  display: inline-flex;
  align-items: center;
  gap: 0.5rem;
}

.lastMonthLabel {
  font-size: 0.75rem;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.08em;
  color: var(--mf-text-secondary);
}

.switchButton {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  background: none;
  padding: 0;
  cursor: pointer;
}

.switchButton:focus-visible {
  outline: none;
}

.switchTrack {
  width: 52px;
  height: 28px;
  border-radius: 999px;
  background: rgba(148, 163, 184, 0.28);
  position: relative;
  transition: background 0.2s ease;
}

.switchThumb {
  position: absolute;
  top: 3px;
  left: 3px;
  width: 22px;
  height: 22px;
  border-radius: 50%;
  background: #ffffff;
  box-shadow: 0 6px 16px rgba(15, 23, 42, 0.2);
  transition: transform 0.2s ease;
}

.switchButtonActive .switchTrack {
  background: linear-gradient(135deg, #34d399 0%, #10b981 100%);
}

.switchButtonActive .switchThumb {
  transform: translateX(24px);
}

.debtAccountsRow,
.debtCategoryRow {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.2rem;
  align-items: flex-start;
}

.transferSection {
  display: flex;
  flex-direction: column;
  gap: 1.4rem;
}

.formRow {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
  gap: 1.2rem;
  align-items: flex-start;
}

.notesField {
  width: 100%;
}

.notesActions {
  display: inline-flex;
  align-items: center;
  gap: 0.4rem;
}

.fieldError {
  margin: 0;
  font-size: 0.82rem;
  font-weight: 600;
  color: var(--mf-negative-strong, #dc2626);
  letter-spacing: 0.03em;
}

.linkButton {
  border: none;
  background: none;
  padding: 0;
  font-size: 0.8rem;
  font-weight: 600;
  color: var(--mf-primary, #6366f1);
  cursor: pointer;
  text-decoration: none;
}

.linkButton:hover,
.linkButton:focus-visible {
  text-decoration: underline;
  outline: none;
}

.textarea {
  border: 1px solid var(--mf-border-subtle);
  border-radius: 16px;
  padding: 0.65rem 0.85rem;
  font-size: 0.95rem;
  resize: vertical;
  min-height: 52px;
  line-height: 1.4;
  background: rgba(148, 163, 184, 0.12);
  color: var(--mf-text-primary);
  transition: border 0.2s ease, box-shadow 0.2s ease, background 0.2s ease;
}

.textarea:focus-visible {
  outline: none;
  border-color: rgba(99, 102, 241, 0.6);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.18);
  background: rgba(99, 102, 241, 0.08);
}

.fullRow {
  grid-column: 1 / -1;
}

.mockOverlay {
  position: fixed;
  inset: 0;
  background: rgba(15, 23, 42, 0.55);
  backdrop-filter: blur(3px);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 1.5rem;
  z-index: 1350;
}

.mockModal {
  width: min(360px, 92vw);
  background: var(--mf-surface, #ffffff);
  border-radius: 22px;
  box-shadow: 0 24px 48px rgba(15, 23, 42, 0.25);
  padding: 1.6rem 1.5rem 1.4rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.mockModalTitle {
  margin: 0;
  font-size: 1.1rem;
  font-weight: 700;
  color: var(--mf-text-primary);
}

.mockModalBody {
  margin: 0;
  font-size: 0.9rem;
  color: var(--mf-text-secondary);
  line-height: 1.55;
}

.mockModalButton {
  align-self: flex-end;
  border: none;
  background: linear-gradient(135deg, #6366f1 0%, #4338ca 100%);
  color: #ffffff;
  padding: 0.55rem 1.2rem;
  border-radius: 14px;
  font-weight: 600;
  cursor: pointer;
  box-shadow: 0 14px 28px rgba(79, 70, 229, 0.28);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.mockModalButton:hover {
  transform: translateY(-1px);
  box-shadow: 0 18px 32px rgba(79, 70, 229, 0.32);
}

.mockModalButton:focus-visible {
  outline: 3px solid rgba(99, 102, 241, 0.35);
  outline-offset: 2px;
}

.actions {
  display: flex;
  justify-content: flex-end;
  gap: 0.75rem;
  padding: 1.2rem 2rem 1.8rem;
  border-top: 1px solid rgba(148, 163, 184, 0.18);
  background: rgba(148, 163, 184, 0.08);
}

.secondaryButton {
  border: 1px solid rgba(148, 163, 184, 0.4);
  background: transparent;
  color: var(--mf-text-primary);
  padding: 0.6rem 1.3rem;
  border-radius: 14px;
  font-weight: 600;
  cursor: pointer;
  transition: background 0.2s ease, color 0.2s ease, border 0.2s ease;
}

.secondaryButton:hover,
.secondaryButton:focus-visible {
  background: rgba(148, 163, 184, 0.18);
  outline: none;
}

.primaryButton {
  border: none;
  background: linear-gradient(135deg, #6366f1 0%, #4338ca 100%);
  color: #ffffff;
  padding: 0.65rem 1.45rem;
  border-radius: 16px;
  font-weight: 600;
  cursor: pointer;
  box-shadow: 0 16px 28px rgba(79, 70, 229, 0.32);
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.primaryButton:hover {
  transform: translateY(-1px);
  box-shadow: 0 20px 34px rgba(79, 70, 229, 0.36);
}

.primaryButton:focus-visible {
  outline: 3px solid rgba(99, 102, 241, 0.35);
  outline-offset: 2px;
}

@media (max-width: 640px) {
  .header {
    padding: 1.4rem 1.4rem 1rem;
  }

  .modalBody {
    padding: 1rem 1.4rem 1.4rem;
    gap: 1.4rem;
  }

  .actions {
    padding: 1rem 1.4rem 1.4rem;
    flex-direction: column;
    align-items: stretch;
  }

  .actions button {
    width: 100%;
  }

  .debtTopRow,
  .debtMetaRow,
  .debtAccountsRow,
  .debtCategoryRow,
  .formRow {
    grid-template-columns: 1fr;
  }

  .debtTypeGroup {
    grid-template-columns: 1fr;
    gap: 0.5rem;
  }

  .debtTypeLabel {
    margin-bottom: 0.15rem;
  }

  .mockModal {
    width: min(320px, 94vw);
    padding: 1.4rem 1.3rem 1.25rem;
  }
}

.debtTypeLabel {
  white-space: nowrap;
}
